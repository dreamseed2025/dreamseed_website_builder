{
  "name": "Dream Seed - Complete Working",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "dreamseed/publish",
        "responseMode": "lastNode",
        "options": {}
      },
      "id": "e1b7ba60-17cf-4626-8dc3-759af52b9a1b",
      "name": "Webhook (POST profile_json)",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [100, 300],
      "webhookId": "d0752106-cd9c-45bc-b320-372574c3340f"
    },
    {
      "parameters": {
        "jsCode": "const b = items[0].json;\nreturn [{ json: {\n  slug: b.slug || \"dream-seed\",\n  company_name: b.company_name || \"Dream Seed\",\n  profile_json: b.profile_json || {},\n  images: Array.isArray(b.images) ? b.images : [],\n  status: b.status || \"draft\"\n}}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [300, 300],
      "id": "ac6d689f-40d9-49de-bcbe-0895f731932d",
      "name": "Normalize Payload"
    },
    {
      "parameters": {
        "operation": "insert",
        "tableId": "sites",
        "options": {
          "upsert": true
        },
        "conflictColumns": "slug",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "slug",
              "fieldValue": "={{$json.slug}}"
            },
            {
              "fieldId": "company_name", 
              "fieldValue": "={{$json.company_name}}"
            },
            {
              "fieldId": "profile_json",
              "fieldValue": "={{$json.profile_json}}"
            },
            {
              "fieldId": "status",
              "fieldValue": "draft"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [500, 300],
      "id": "0a312398-408e-44ba-af9b-37386372fc0c",
      "name": "Supabase: Upsert Site",
      "credentials": {
        "supabaseApi": {
          "id": "pp4cjTzuPgQnBPAB",
          "name": "Supabase account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "getMany",
        "tableId": "sites",
        "filterType": "string",
        "filterString": "slug=eq.{{$json.slug}}",
        "options": {
          "select": "id,slug"
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [700, 300],
      "id": "ccca69d9-db8f-4119-aa40-8922a30f73a5",
      "name": "Supabase: Get Site ID",
      "credentials": {
        "supabaseApi": {
          "id": "pp4cjTzuPgQnBPAB",
          "name": "Supabase account 2"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const site = items[0].json[0];\nconst input = $items(\"Normalize Payload\", 0, 0).json;\nreturn [{ json: { \n  site_id: site.id, \n  slug: site.slug, \n  profile_json: input.profile_json, \n  images: input.images \n} }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 300],
      "id": "9a065212-a4f4-4c61-801c-5c6ee1f06858",
      "name": "Build site.json"
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "https://api.github.com/repos/dreamseed2025/dreamseed_website_builder/contents/site.json",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer ${GITHUB_TOKEN}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\"message\":\"chore: update site.json\",\"content\":\"={{ Buffer.from(JSON.stringify($json, null, 2)).toString('base64') }}\",\"branch\":\"main\"}"
      },
      "id": "603fde56-d09b-4ccc-a0f4-57ffe4d117b4",
      "name": "GitHub: PUT site.json",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [1100, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.vercel.com/v1/integrations/deploy/prj_dSB2N6HNUUc3tJwYZKJxfSNtyIM6/TgFqpeEPQj"
      },
      "id": "40d14c41-a791-4d2c-8315-f3dd48f6955b",
      "name": "Vercel: Deploy Hook",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [1300, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\"status\":\"ok\",\"message\":\"Queued deploy\",\"slug\":\"={{$items('Build site.json',0,0).json.slug}}\"}"
      },
      "id": "c3732a67-7a5c-4c4e-8a8f-627e2006dcf5",
      "name": "Respond",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1500, 300]
    }
  ],
  "connections": {
    "Webhook (POST profile_json)": {
      "main": [
        [
          {
            "node": "Normalize Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Normalize Payload": {
      "main": [
        [
          {
            "node": "Supabase: Upsert Site",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase: Upsert Site": {
      "main": [
        [
          {
            "node": "Supabase: Get Site ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase: Get Site ID": {
      "main": [
        [
          {
            "node": "Build site.json",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Build site.json": {
      "main": [
        [
          {
            "node": "GitHub: PUT site.json",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub: PUT site.json": {
      "main": [
        [
          {
            "node": "Vercel: Deploy Hook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vercel: Deploy Hook": {
      "main": [
        [
          {
            "node": "Respond",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "tags": []
}
